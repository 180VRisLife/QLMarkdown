.DEFAULT_GOAL := all

SPACE     := $(null) $(null)
CURRENT_DIR := $(subst $(SPACE),"\\ ",$(CURDIR))

ifeq ($(BUILT_PRODUCTS_DIR),)
	BUILD_DIR=${CURRENT_DIR}/build
else
	BUILD_DIR=${BUILT_PRODUCTS_DIR}
endif

ifeq ($(ONLY_ACTIVE_ARCH),)
	ONLY_ACTIVE_ARCH=NO
endif

CXX=clang++
CFLAGS=
LDFLAGS=

CFLAGS_x86_64=-target x86_64-apple-macos10.15
CFLAGS_arm64=-target arm64-apple-macos11

LDFLAGS_x86_64=-target x86_64-apple-macos10.15
LDFLAGS_arm64=-target arm64-apple-macos11

ifeq ($(CONFIGURATION),Debug)
	CFLAGS_x86_64+= -g
	CFLAGS_arm64+= -g
else
	CFLAGS_x86_64+= -DNDEBUG
	CFLAGS_arm64+= -DNDEBUG
endif

bold := $(shell tput bold 2> /dev/null)
normal := $(shell tput sgr0 2> /dev/null)

ifndef NATIVE_ARCH
	NATIVE_ARCH := $(shell uname -m)
	# $(error NATIVE_ARCH is not set)
endif

VALID_ARCHS = x86_64 arm64

libpcre_files =

ifeq ($(NATIVE_ARCH),x86_64)
	libpcre_files += ${BUILD_DIR}/pcre2-x86_64/lib/libpcre2-32.a
else
	libpcre_files += ${BUILD_DIR}/pcre2-arm64/lib/libpcre2-32.a
endif

ifeq ($(ONLY_ACTIVE_ARCH),NO)
ifeq ($(NATIVE_ARCH),x86_64)
		# build arm code
		libpcre_files += ${BUILD_DIR}/pcre2-arm64/lib/libpcre2-32.a
else
		# build intel code
		libpcre_files += ${BUILD_DIR}/pcre2-x86_64/lib/libpcre2-32.a
endif
endif

check_arch:
# 	@echo NATIVE_ARCH IS $(NATIVE_ARCH)
ifeq ($(filter $(NATIVE_ARCH),$(VALID_ARCHS)),)
		$(error "Current arch ${NATIVE_ARCH} is not supported! Valid archs are: ${VALID_ARCHS}.")
endif
ifeq ($(ONLY_ACTIVE_ARCH),NO)
		@echo "Building universal binary"
else
		@echo "Building $(NATIVE_ARCH) architecture"
endif
	@echo ""

clean:
	@echo "${bold}Cleaning libpcre…${normal}"
	${MAKE} clean
		
	@rm -r "${BUILD_DIR}/pcre2-arm64/" 2> /dev/null
	@rm -r "${BUILD_DIR}/pcre2-x86_64/" 2> /dev/null
	@rm "${BUILD_DIR}/libpcre2-32.a" 2> /dev/null
	@rm "${BUILD_DIR}/pcre2.h" 2> /dev/null
	@echo ""

libpcre2: ${BUILD_DIR}/libpcre2-32.a
configure: ${CURRENT_DIR}/configure

${CURRENT_DIR}/configure:
	@echo "${bold}Generating the configure tool…${normal}"
	./autogen.sh
	
${BUILD_DIR}/pcre2-arm64/lib/libpcre2-32.a: | configure
	@echo "${bold}Building libpcre2 for arm64 platform…${normal}"
	./configure CFLAGS="${CFLAGS_arm64}" LDFLAGS="${LDFLAGS_arm64}" --enable-jit --enable-pcre2-32 --enable-static --disable-shared --disable-pcre2-8 --prefix="${BUILD_DIR}/pcre2-arm64" --host arm64-apple-macos11
	${MAKE} clean
	${MAKE}
	${MAKE} install
	@echo ""

${BUILD_DIR}/pcre2-x86_64/lib/libpcre2-32.a: | configure
	@echo "${bold}Building libpcre2 for intel platform…${normal}"
	./configure CFLAGS="${CFLAGS_x86_64}" LDFLAGS="${LDFLAGS_x86_64}" --enable-jit --enable-pcre2-32 --enable-static --disable-shared --disable-pcre2-8 --prefix="${BUILD_DIR}/pcre2-x86_64" --host x86_64-apple-macos10.15
	${MAKE} clean
	${MAKE}
	${MAKE} install
	@echo ""

${BUILD_DIR}/libpcre2-32.a: ${libpcre_files}
ifeq ($(ONLY_ACTIVE_ARCH),NO)
		@echo "${bold}Creating libpcre2 universal library…${normal}"
		lipo -create -output "${BUILD_DIR}/libpcre2-32.a" "${BUILD_DIR}/pcre2-x86_64/lib/libpcre2-32.a" "${BUILD_DIR}/pcre2-arm64/lib/libpcre2-32.a"
else
		@echo "${bold}Creating libpcre2 library for ${NATIVE_ARCH}…${normal}"
		@rm -f "${BUILD_DIR}/libpcre2-32.a" > /dev/null
		ln "${BUILD_DIR}/pcre2-${NATIVE_ARCH}/lib/libpcre2-32.a" "${BUILD_DIR}/libpcre2-32.a"
endif
	@echo ""
	
pcre2.h: ${BUILD_DIR}/pcre2.h

${BUILD_DIR}/pcre2.h: ${BUILD_DIR}/libpcre2-32.a
	@rm -f "${BUILD_DIR}/pcre2.h" > /dev/null
	ln "${BUILD_DIR}/pcre2-${NATIVE_ARCH}/include/pcre2.h" "${BUILD_DIR}/pcre2.h"

all: check_arch libpcre2 pcre2.h
install: check_arch libpcre2 pcre2.h

